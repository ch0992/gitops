apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-chromadb
  labels:
    app: {{ .Release.Name }}-chromadb
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}-chromadb
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-chromadb
    spec:
      containers:
      - name: chromadb
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
        - containerPort: {{ .Values.service.targetPort }}
        env:
        {{- range $key, $value := .Values.env }}
        - name: {{ $key }}
          value: {{ $value | quote }}
        {{- end }}
        volumeMounts:
        - name: chromadb-data
          mountPath: {{ .Values.env.PERSIST_DIRECTORY }}
      volumes:
      - name: chromadb-data
        {{- if and .Values.persistence.enabled .Values.persistence.hostPath.enabled }}
        hostPath:
          path: {{ .Values.persistence.hostPath.path }}
          type: DirectoryOrCreate
        {{- else if .Values.persistence.enabled }}
        persistentVolumeClaim:
          claimName: {{ .Release.Name }}-chromadb-pvc
        {{- else }}
        emptyDir: {}
        {{- end }}